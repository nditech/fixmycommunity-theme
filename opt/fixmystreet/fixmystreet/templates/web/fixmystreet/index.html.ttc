use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'index.html',
        'modtime' => '1442247214',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"

# CAPTURE
$stash->set('map_js', do {
    my $output = '';
$output .=  $context->process('front/javascript.html');
    $output;
});

$output .=  "\n\n";
#line 3 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"

# CAPTURE
$stash->set('pre_container_extra', do {
    my $output = '';
$output .=  $context->process('around/postcode_form.html');
    $output;
});

$output .=  "\n";
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
$output .=  $context->include('header.html', { 'title' => '', 'bodyclass' => 'frontpage fullwidthpage' });
$output .=  "\n\n";
#line 8 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
if ($stash->get('error')) {
$output .=  "\n    <p class=\"form-error\">";
#line 7 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
$output .=  $stash->get('error');
$output .=  "</p>\n";
}

$output .=  "\n\n";
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"

# TRY
$output .=  do {
    my $output = '';
    my ($_tt_error, $_tt_handler);
    eval {
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
$output .=  $context->process('front/pre-steps.html');
    };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error if $_tt_error->type =~ /^return|stop$/;
        $stash->set('error', $_tt_error);
        $stash->set('e', $_tt_error);
        if (defined ($_tt_handler = $_tt_error->select_handler('file'))) {
if ($_tt_handler eq 'file') {

}
$_tt_error = 0;
        }
# NO DEFAULT
    }
# FINAL
die $_tt_error if $_tt_error;
$output;
};

$output .=  "\n\n<div class=\"tablewrapper\">\n    <div class=\"frontwrapper\">\n    	<div id=\"front-howto\">\n		<div>\n        	";
#line 16 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
$output .=  $context->include('index-steps.html');
$output .=  "\n		</div>\n    	</div>\n\n    	";
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
$output .=  $context->include('front/recent.html');
$output .=  "\n    </div>\n</div>\n\n";
#line 24 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/index.html"
$output .=  $context->include('footer.html', { 'pagefooter' => 'yes' });
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
