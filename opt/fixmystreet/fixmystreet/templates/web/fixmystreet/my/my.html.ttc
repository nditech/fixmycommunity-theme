use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'my/my.html',
        'modtime' => '1442419589',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$stash->set('bodyclass', 'mappage my-reports');
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['problems', 0, 'size', 0])) {
$output .=  $context->process(("maps/" . $stash->get(['map', 0, 'type', 0]) . ".html"));
}

#line 1 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('header.html', { 'title' => $stash->get(['loc', [ 'Your Reports' ]]) });

$output .=  "\n\n";
#line 13 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['problems', 0, 'size', 0])) {
$output .=  "\n    ";
#line 8 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get('map_html');
$output .=  "\n    </div>\n    <div id=\"side\">\n";
}
else {
$output .=  "\n    <div id=\"skipped-map\">\n";
}

$output .=  "\n\n<h1>";
#line 15 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['loc', [ 'Your Reports' ]]);
$output .=  "</h1>\n\n<p><a href=\"/auth/change_password\">";
#line 17 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['loc', [ 'Change password' ]]);
$output .=  "</a></p>\n\n";
#line 22 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if (! $stash->get('has_content')) {
$output .=  "\n";
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'You haven&rsquo;t created any reports yet.  <a href="%s">Report a problem now.</a>' ]]), $stash->get(['c', 0, 'uri_for', [ '/' ]]) ]]);
$output .=  "\n";
}

$output .=  "\n\n";
#line 28 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['c', 0, 'cobrand', 0, 'moniker', 0]) eq 'fixmybarangay') {
$output .=  "\n    ";
#line 25 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('_barangay_buttons.html');
$output .=  "\n";
}
elsif ($stash->get(['c', 0, 'cobrand', 0, 'moniker', 0]) eq 'hart') {
$output .=  "\n    ";
#line 27 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('_hart_hants_note.html');
$output .=  "\n";
}

$output .=  "\n\n";
#line 30 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('pagination.html', { 'pager' => $stash->get('problems_pager'), 'param' => 'p' });
$output .=  "\n\n";
#line 38 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['problems', 0, 'confirmed', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'p'} = $_tt_value;
$output .=  "\n    ";
#line 36 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'first', 0])) {
$output .=  "<h2>";
#line 36 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['loc', [ 'Open reports' ]]);
$output .=  "</h2>";
}

$output .=  "\n    ";
#line 37 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('problem');
$output .=  "\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n";
#line 43 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['problems', 0, 'fixed', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'p'} = $_tt_value;
$output .=  "\n    ";
#line 41 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'first', 0])) {
$output .=  "<h2>";
#line 41 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['loc', [ 'Fixed reports' ]]);
$output .=  "</h2>";
}

$output .=  "\n    ";
#line 42 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('problem');
$output .=  "\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n";
#line 48 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['problems', 0, 'closed', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'p'} = $_tt_value;
$output .=  "\n    ";
#line 46 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'first', 0])) {
$output .=  "<h2>";
#line 46 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['loc', [ 'Closed reports' ]]);
$output .=  "</h2>";
}

$output .=  "\n    ";
#line 47 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('problem');
$output .=  "\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n";
$output .=  "\n\n";
#line 74 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('updates');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'u'} = $_tt_value;
$output .=  "\n    ";
#line 65 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'first', 0])) {
$output .=  "\n        <h2>";
#line 59 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['loc', [ 'Your updates' ]]);
$output .=  "</h2>\n        ";
#line 60 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('pagination.html', { 'pager' => $stash->get('updates_pager'), 'param' => 'u' });
$output .=  "\n        <ul class=\"issue-list full-width\">\n    ";
}

$output .=  "\n\n    <li>&ldquo;";
#line 67 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['u', 0, 'text', 0]);
    
    &$_tt_filter($output);
};

$output .=  "&rdquo;\n    &ndash; <a href=\"";
#line 68 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['c', 0, 'uri_for', [ '/report', $stash->get(['u', 0, 'problem_id', 0]) ]]);
$output .=  "#update_";
#line 68 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['u', 0, 'id', 0]);
$output .=  "\">";
#line 68 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['u', 0, 'problem', 0, 'title', 0]);
    
    &$_tt_filter($output);
};

$output .=  "</a>.\n        <p><small class=\"council_sent_info\">\n        ";
#line 70 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'Added %s' ]]), $stash->get(['prettify_dt', [ $stash->get(['u', 0, 'confirmed', 0]), 'date' ]]) ]]);
$output .=  "\n        </small></p>\n    </li>\n    ";
#line 73 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'last', 0])) {
$output .=  '</ul>';
}

$output .=  "\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n</div>\n\n";
#line 78 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('footer.html');
$output .=  "\n\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'problem' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n    ";
#line 81 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'first', 0])) {
$output .=  '<ul class=\'issue-list-a full-width\'>';
}

$output .=  "\n    ";
#line 82 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
$output .=  $context->include('report/_item.html', { 'problem' => $stash->get('p'), 'no_fixed' => 1 });
$output .=  "\n    ";
#line 83 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/my/my.html"
if ($stash->get(['loop', 0, 'last', 0])) {
$output .=  '</ul>';
}

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
