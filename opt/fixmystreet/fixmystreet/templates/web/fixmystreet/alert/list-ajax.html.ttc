use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1433826839',
        'name' => 'alert/list-ajax.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/alert/list-ajax.html"
if ($stash->get('pretty_pc')) {
$output .=  "\n    ";
#line 2 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/alert/list-ajax.html"

# CAPTURE
$stash->set('pretty_pc', do {
    my $output = '';

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('replace', [ ' ', '&nbsp;' ])
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('pretty_pc');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

    $output;
});


$output .=  "\n";
}

$output .=  "\n\n<div id=\"alerts\">\n  ";
#line 8 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/alert/list-ajax.html"
$output .=  $context->include('alert/_list.html');
$output .=  "\n</div>\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
