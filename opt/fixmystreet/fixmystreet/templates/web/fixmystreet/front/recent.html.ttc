use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1442247266',
        'name' => 'front/recent.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "    ";
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/recent.html"
$stash->set('recent_photos', $stash->get(['c', 0, 'cobrand', 0, 'recent_photos', [ 'front', 5 ]]));

$output .=  "\n\n    ";
#line 25 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/recent.html"
if ($stash->get(['recent_photos', 0, 'size', 0])) {
$output .=  "\n    <div id=\"front-recently\">\n	<div>\n        <h2>\n            ";
#line 13 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/recent.html"
if ($stash->get(['c', 0, 'cobrand', 0, 'moniker', 0]) eq 'hart') {
$output .=  "\n                Recently reported\n            ";
}
else {
$output .=  "\n                ";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/recent.html"
$output .=  $stash->get(['loc', [ 'Recently reported problems' ]]);
$output .=  "\n            ";
}

$output .=  "\n        </h2>\n\n        <section class=\"full-width\">\n            <ul class=\"issue-list-a\">\n            ";
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/recent.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('recent_photos');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'problem'} = $_tt_value;
$output .=  "\n            ";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/recent.html"
$output .=  $context->include('report/_item.html', { 'no_fixed' => 1 });
$output .=  "\n            ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n            </ul>\n        </section>\n	</div>\n    </div>\n    ";
}

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
