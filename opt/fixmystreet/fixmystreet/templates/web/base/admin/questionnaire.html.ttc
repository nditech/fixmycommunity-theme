use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/questionnaire.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $context->include('admin/header.html', { 'title' => $stash->get(['loc', [ 'Survey Results' ]]) });
$output .=  "\n\n<table border=\"1\">\n    <tr>\n        <th>";
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'Reported before' ]]);
$output .=  "</th>\n        <th>";
#line 6 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'Not reported before' ]]);
$output .=  "</th>\n    </tr>\n    ";
#line 18 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
if ($stash->get(['questionnaires', 0, 'total', 0]) > 0) {
$output .=  "\n    <tr>\n        <td>";
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['questionnaires', 0, 1, 0]);
$output .=  " (";
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('format', [ '%.1f' ])
              || $context->throw($context->error);

$output .=  100 * $stash->get(['questionnaires', 0, 1, 0]) / $stash->get(['questionnaires', 0, 'total', 0]);
    
    &$_tt_filter($output);
};

$output .=  "%)</td>\n        <td>";
#line 11 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['questionnaires', 0, 0, 0]);
$output .=  " (";
#line 11 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('format', [ '%.1f' ])
              || $context->throw($context->error);

$output .=  100 * $stash->get(['questionnaires', 0, 0, 0]) / $stash->get(['questionnaires', 0, 'total', 0]);
    
    &$_tt_filter($output);
};

$output .=  "%)</td>\n    </tr>\n    ";
}
else {
$output .=  "\n    <tr>\n        <td>";
#line 15 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'n/a' ]]);
$output .=  "</td>\n        <td>";
#line 16 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'n/a' ]]);
$output .=  "</td>\n    </tr>\n    ";
}

$output .=  "\n</table>\n\n<h2>";
#line 21 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'Problem state change based on survey results' ]]);
$output .=  "</h2>\n\n<table>\n<tr><th>";
#line 24 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'Old state' ]]);
$output .=  "</th><th>";
#line 24 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'New state' ]]);
$output .=  "</th><th>";
#line 24 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['loc', [ 'Total' ]]);
$output .=  "</th></tr>\n";
#line 27 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"

# WHILE
do {
    my $_tt_failsafe = 1000;
WHILE1:
    while (--$_tt_failsafe && ($stash->set('s', $stash->get(['state_changes', 0, 'next', 0])))) {
$output .=  "\n<tr><td>";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['s', 0, 'old_state', 0]);
$output .=  "</td><td>";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['s', 0, 'new_state', 0]);
$output .=  "</td><td>";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $stash->get(['s', 0, 'get_column', [ 'c' ]]);
$output .=  " (";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('format', [ '%.1f' ])
              || $context->throw($context->error);

$output .=  100 * $stash->get(['s', 0, 'get_column', [ 'c' ]]) / $stash->get('state_changes_count');
    
    &$_tt_filter($output);
};

$output .=  "%)</td></tr>\n";
    }
    die "WHILE loop terminated (> 1000 iterations)\n"
        unless $_tt_failsafe;
};

$output .=  "\n</table>\n\n";
#line 30 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/questionnaire.html"
$output .=  $context->include('admin/footer.html');
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
