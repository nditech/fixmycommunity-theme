use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/body-form.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "    <form method=\"post\" action=\"";
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get('body') ? $stash->get(['c', 0, 'uri_for', [ 'body', $stash->get(['body', 0, 'id', 0]) ]]) : $stash->get(['c', 0, 'uri_for', [ 'bodies' ]]);
$output .=  "\" enctype=\"application/x-www-form-urlencoded\" accept-charset=\"utf-8\">\n    <div class=\"fms-admin-info\">\n        ";
#line 3 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Add a <strong>body</strong> for each administrative body, such as a council or department
          to which problem reports can be sent. You can add one or more contacts (for different
          categories of problem) to each body.' ]]);
$output .=  "\n    </div>\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 11 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'The body\'s <strong>name</strong> identifies the body (for example, <em>Borsetshire District Council</em>)
          and may be displayed publically.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for=\"name\">";
#line 18 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Name' ]]);
$output .=  "</label>\n        <input type=\"text\" name=\"name\" id=\"name\" value=\"";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['body', 0, 'name', 0]);
$output .=  "\" size=\"50\">\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 24 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Identify a <strong>parent</strong> if this body is itself part of another body.
          For basic installations, you don\'t need to join bodies in this way.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for=\"parent\">";
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Parent' ]]);
$output .=  "</label>\n        <select name=\"parent\" id=\"parent\">\n            <option value=\"\"> -- ";
#line 33 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Select a body' ]]);
$output .=  " -- </option>\n            ";
#line 36 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('bodies');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'b'} = $_tt_value;
$output .=  "\n            <option value=\"";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['b', 0, 'id', 0]);
$output .=  "\"";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body', 0, 'parent', 0, 'id', 0]) eq $stash->get(['b', 0, 'id', 0])) {
$output .=  ' selected';
}

$output .=  ">";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['b', 0, 'name', 0]);
$output .=  "</option>\n            ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n        </select>\n    </p>\n\n    ";
#line 48 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['areas', 0, 'size', 0]) eq 0 && $stash->get(['c', 0, 'config', 0, 'MAPIT_URL', 0]) && (! $stash->get(['c', 0, 'config', 0, 'MAPIT_TYPES', 0]) || $stash->get(['c', 0, 'config', 0, 'MAPIT_TYPES', 0, 'size', 0]) eq $stash->get('O'))) {
$output .=  "\n        <p class=\"fms-admin-warning\">\n          ";
#line 42 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ '<code>MAPIT_URL</code> is set (<code>%s</code>) but no <code>MAPIT_TYPES</code>.<br>
              This is probably why "area covered" is empty (below).<br>
              Maybe add some <code>MAPIT_TYPES</code> to your config file?' ]]), $stash->get(['c', 0, 'config', 0, 'MAPIT_URL', 0]) ]]);
$output .=  "\n        </p>\n    ";
}

$output .=  "\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 52 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'This body will only be sent reports for problems that are located in the <strong>area covered</strong>.
          A body will not receive any reports unless it covers at least one area.' ]]);
$output .=  "\n        <br>\n        ";
#line 63 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['c', 0, 'config', 0, 'MAPIT_URL', 0])) {
$output .=  "\n          ";
#line 58 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'The list of available areas is being provided by the MapIt service at %s.' ]]), $stash->get(['c', 0, 'config', 0, 'MAPIT_URL', 0]) ]]);
$output .=  "\n        ";
}
else {
$output .=  "\n          ";
#line 60 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'No specific areas are currently available, because the <code>MAPIT_URL</code> in
            your config file is not pointing to a live MapIt service.' ]]);
$output .=  "\n        ";
}

$output .=  "\n        <br>\n        ";
#line 65 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'For more information, see <a href=\'http://fixmystreet.org/customising/fms_and_mapit\' class=\'admin-offsite-link\'>How FixMyStreet uses Mapit</a>.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for=\"area_ids\">";
#line 69 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Area covered' ]]);
$output .=  "</label>\n        <select name=\"area_ids\" id=\"area_ids\" multiple>\n            <option value=\"\"> -- ";
#line 71 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Select an area' ]]);
$output .=  " -- </option>\n            ";
#line 72 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$stash->set('body_areas', $stash->get(['body', 0, 'areas', 0]));
$output .=  "\n            ";
#line 76 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('areas');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'area'} = $_tt_value;
$output .=  "\n            ";
#line 74 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$stash->set('aid', $stash->get(['area', 0, 'id', 0]));
$output .=  "\n            <option value=\"";
#line 75 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['area', 0, 'id', 0]);
$output .=  "\"";
#line 75 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body_areas', 0, $stash->get('aid'), 0])) {
$output .=  ' selected';
}

$output .=  ">";
#line 75 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['area', 0, 'name', 0]);
$output .=  "</option>\n            ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n        </select>\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>";
#line 81 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'You can mark a body as deleted if you do not want it to be active on the site.' ]]);
$output .=  "</p>\n    </div>\n    <p>\n        <label for=\"deleted\">";
#line 84 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Flag as deleted' ]]);
$output .=  "</label>\n        <input type=\"checkbox\" name=\"deleted\" id=\"deleted\" value=\"1\"";
#line 85 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body', 0, 'deleted', 0])) {
$output .=  ' checked';
}

$output .=  ">\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 90 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'The <strong>send method</strong> determines how problem reports will be sent to the body.
           If you leave this blank, <strong>send method defaults to email</strong>.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for=\"send_method\">Send Method</label>\n        <select name=\"send_method\" id=\"send_method\">\n            <option value=\"\"> -- Select a method -- </option>\n            ";
#line 102 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('send_methods');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'method'} = $_tt_value;
$output .=  "\n            <option value=\"";
#line 101 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get('method');
$output .=  "\"";
#line 101 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body', 0, 'send_method', 0]) eq $stash->get('method')) {
$output .=  ' selected';
}

$output .=  ">";
#line 101 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get('method');
$output .=  "</option>\n            ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n        </select>\n    </p>\n\n    <div class=\"admin-open311-only\">\n      <p class=\"fms-admin-info\">\n        ";
#line 108 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'These settings are for bodies that use Open311 (or other back-end integration) to receive problem reports.<br>
           <strong>You don\'t need to set them if the Send Method is email.</strong>.
           For more information on Open311, see 
           <a href=\'https://www.mysociety.org/2013/01/17/open311-explained/\' class=\'admin-offsite-link\'>this article</a>.
           ' ]]);
$output .=  "\n      </p>\n\n      <div class=\"admin-hint\">\n        <p>\n          ";
#line 119 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'The <strong>endpoint</strong> is the URL of the service that FixMyStreet will connect to 
            when sending reports to this body.' ]]);
$output .=  "\n        </p>\n      </div>\n    <p>\n        <label for=\"endpoint\">";
#line 126 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Endpoint' ]]);
$output .=  "</label>\n        <input type=\"text\" name=\"endpoint\" id=\"endpoint\" value=\"";
#line 127 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['body', 0, 'endpoint', 0]);
$output .=  "\" size=\"50\">\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 132 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'The <strong>jurisdiction</strong> is only needed if the endpoint is serving more
          than one. If the body is running its own endpoint, you can usually leave this blank.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for=\"jurisdiction\">Open311 Jurisdiction</label>\n        <input type=\"text\" name=\"jurisdiction\" id=\"jurisdiction\" value=\"";
#line 140 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['body', 0, 'jurisdiction', 0]);
$output .=  "\" size=\"50\">\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 145 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Some endpoints require an <strong>API key</strong> to indicate that the reports are being
          sent from your FixMyStreet installation.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for=\"api_key\">Open311 API Key</label>\n        <input type=\"text\" name=\"api_key\" id=\"api_key\" value=\"";
#line 153 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['body', 0, 'api_key', 0]);
$output .=  "\" size=\"25\">\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 158 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Enable <strong>Open311 update-sending</strong> if the endpoint will send and receive
          updates to existing reports. If you\'re not sure, it probably does not, so leave this unchecked.
          For more information, see 
          <a href=\'https://www.mysociety.org/2013/02/20/open311-extended/\' class=\'admin-offsite-link\'>this article</a>.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <input type=\"checkbox\" id=\"send_comments\" name=\"send_comments\"";
#line 167 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body', 0, 'send_comments', 0])) {
$output .=  ' checked';
}

$output .=  ">\n        <label for=\"send_comments\" class=\"inline\">Use Open311 update-sending extension</label>\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 173 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'If you\'ve enabled Open311 update-sending above, you must identify which 
          FixMyStreet <strong>user</strong> will be attributed as the creator of those updates
          when they are shown on the site. Enter the ID (number) of that user.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <label for\"comment_user_id\">User ID to attribute fetched comments to</label>\n        <input type=\"text\" name=\"comment_user_id\" value=\"";
#line 182 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['body', 0, 'comment_user_id', 0]);
$output .=  "\">\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 187 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'If you\'ve enabled Open311 update-sending above, enable <strong>suppression of alerts</strong> 
          if you do <strong>not</strong> want that user to be notified whenever these updates are created.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <input type=\"checkbox\" id=\"suppress_alerts\" name=\"suppress_alerts\"";
#line 194 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body', 0, 'suppress_alerts', 0])) {
$output .=  ' checked';
}

$output .=  ">\n        <label for=\"suppress_alerts\" class=\"inline\">Do not send email alerts on fetched comments to problem creator</label>\n    </p>\n\n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 200 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'If you\'ve enabled Open311 update-sending above, Open311 usually only accepts OPEN or CLOSED status in 
          its updates. Enable <strong>extended Open311 stauses</strong> if you want to allow extra states to be passed.
          Check that your cobrand supports this feature before switching it on.' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <input type=\"checkbox\" id=\"send_extended_statuses\" name=\"send_extended_statuses\"";
#line 208 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['conf', 0, 'send_extended_statuses', 0])) {
$output .=  ' checked';
}

$output .=  ">\n        <label for=\"send_extended_statuses\" class=\"inline\">Send extended Open311 statuses with service request updates</label>\n    </p>\n    </div>\n    \n    <div class=\"admin-hint\">\n      <p>\n        ";
#line 215 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['loc', [ 'Enable this <strong>can be devolved</strong> setting if one or more contacts have a 
          different endpoint (and send method) from the body\'s. For example, if reports for some categories of
          problem must be emailed, while others can be sent over Open311.' ]]);
$output .=  "\n        <br>\n        ";
$output .=  "\n        ";
#line 222 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'Leave this blank if all reports to this body should be sent using the same send method (e.g., "%s").' ]]), $stash->get(['body', 0, 'send_method', 0]) || 'email' ]]);
$output .=  "\n      </p>\n    </div>\n    <p>\n        <input type=\"checkbox\" id=\"can_be_devolved\" name=\"can_be_devolved\"";
#line 226 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
if ($stash->get(['body', 0, 'can_be_devolved', 0])) {
$output .=  ' checked';
}

$output .=  ">\n        <label for=\"can_be_devolved\" class=\"inline\">Send method or endpoints can be devolved to contacts (i.e, can be different from the body's)</label>\n    </p>\n    \n    <p>\n    <input type=\"hidden\" name=\"posted\" value=\"body\">\n    <input type=\"hidden\" name=\"token\" value=\"";
#line 232 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get('token');
$output .=  "\">\n    <input type=\"submit\" value=\"";
#line 233 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/body-form.html"
$output .=  $stash->get('body') ? $stash->get(['loc', [ 'Update body' ]]) : $stash->get(['loc', [ 'Add body' ]]);
$output .=  "\">\n    </p>\n    </form>\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
