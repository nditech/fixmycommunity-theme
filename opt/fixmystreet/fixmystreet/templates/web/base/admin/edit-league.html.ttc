use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/edit-league.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "<div class=\"admin-hint\">\n  <p>\n    ";
#line 3 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/edit-league.html"
$output .=  $stash->get(['loc', [ 'The diligency prize league table shows editors\' activity (who\'s been editing the most records).' ]]);
$output .=  "\n  </p>\n</div>\n<h2>";
#line 8 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/edit-league.html"
$output .=  $stash->get(['loc', [ 'Diligency prize league table' ]]);
$output .=  "</h2>\n";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/edit-league.html"
if ($stash->get(['edit_activity', 0, 'count', 0])) {
$output .=  "\n<ul>\n    ";
#line 13 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/edit-league.html"

# WHILE
do {
    my $_tt_failsafe = 1000;
WHILE1:
    while (--$_tt_failsafe && ($stash->set('editor', $stash->get(['edit_activity', 0, 'next', 0])))) {
$output .=  "\n    <li>";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/edit-league.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ '%d edits by %s' ]]), $stash->get(['editor', 0, 'get_column', [ 'c' ]]), $stash->get(['editor', 0, 'editor', 0]) ]]);
$output .=  "</li>\n    ";
    }
    die "WHILE loop terminated (> 1000 iterations)\n"
        unless $_tt_failsafe;
};

$output .=  "\n</ul>\n";
}
else {
$output .=  "\n<p>\n";
#line 17 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/edit-league.html"
$output .=  $stash->get(['loc', [ 'No edits have yet been made.' ]]);
$output .=  "\n</p>\n";
}

$output .=  "\n\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
