use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'maps/osm.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 9 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"

# CAPTURE
$stash->set('map_js', do {
    my $output = '';
$output .=  "\n<script type=\"text/javascript\" src=\"";
#line 2 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"
$output .=  $stash->get(['version', [ '/js/OpenLayers.fixmystreet.js' ]]);
$output .=  "\"></script>\n<script type=\"text/javascript\" src=\"";
#line 3 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"
$output .=  $stash->get(['version', [ '/js/map-OpenLayers.js' ]]);
$output .=  "\"></script>\n<script type=\"text/javascript\" src=\"";
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"
$output .=  $stash->get(['version', [ '/js/map-OpenStreetMap.js' ]]);
$output .=  "\"></script>\n<script type=\"text/javascript\" src=\"";
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"
$output .=  $stash->get(['version', [ '/js/jquery.ba-hashchange.min.js' ]]);
$output .=  "\"></script>\n<!--[if lte IE 6]>\n  <link rel=\"stylesheet\" href=\"/js/OpenLayers-2.13.1/theme/default/ie6-style.css\" type=\"text/css\">\n<![endif]-->\n";
    $output;
});

$output .=  "\n\n";
#line 13 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"

# CAPTURE
$stash->set('map_html', do {
    my $output = '';
$output .=  "\n";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/maps/osm.html"
$output .=  $context->include('maps/openlayers.html');
$output .=  "\n";
    $output;
});

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
