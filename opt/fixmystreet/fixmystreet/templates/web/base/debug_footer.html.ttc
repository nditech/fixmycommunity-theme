use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1433826839',
        'name' => 'debug_footer.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 39 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
if ($stash->get(['c', 0, 'config', 0, 'STAGING_SITE', 0]) && $stash->get(['c', 0, 'config', 0, 'SHOW_DEBUG', 0])) {
$output .=  "\n\n<hr style=\"clear: both;\">\n\n<ul>\n    <li>cobrand.moniker:           ";
#line 6 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get(['c', 0, 'cobrand', 0, 'moniker', 0]);
$output .=  "</li>\n    <li>additional_template_paths: ";
#line 7 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get(['additional_template_paths', 0, 'join', [ ', ' ]]) || '--empty--';
$output .=  "</li>\n    <li>lang_code:                 ";
#line 8 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get('lang_code');
$output .=  "</li>\n    <li>user.id:                   ";
#line 9 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get(['c', 0, 'user', 0, 'id', 0]) || '--not logged in--';
$output .=  "</li>\n</ul>\n\n<style type=\"text/css\">\n    #overrides_form {\n        font-size: 80%;\n    }\n    #overrides_form label {\n            float: left;\n            text-align: right;\n            padding-right: 0.5em;\n            width: 12em;\n    }\n\n</style>\n\n<!-- Use a post so that we don't clutter up the url -->\n<form action=\"\" method=\"post\" id=\"overrides_form\" name=\"overrides_form\">\n\n    <label for=\"_override_clear_all\">Clear all overrides:</label>\n    <input type=\"checkbox\" name=\"_override_clear_all\" id=\"_override_clear_all\" value=\"1\"><br>\n\n    ";
#line 34 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = [ 'cobrand_moniker', 'lang' ];
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'k'} = $_tt_value;
$output .=  "\n        <label for=\"override_";
#line 32 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get('k');
$output .=  "\">";
#line 32 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get('k');
$output .=  ":</label>\n        <input type=\"text\" name=\"_override_";
#line 33 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get('k');
$output .=  "\" id=\"override_";
#line 33 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get('k');
$output .=  "\" value=\"";
#line 33 "/opt/fixmystreet/fixmystreet/templates/web/base/debug_footer.html"
$output .=  $stash->get(['c', 0, 'get_override', [ $stash->get('k') ]]);
$output .=  "\"><br>\n    ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n    <label>&nbsp;</label><input type=\"submit\" value=\"Change overrides\">\n</form>\n\n";
}

$output .=  "\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
