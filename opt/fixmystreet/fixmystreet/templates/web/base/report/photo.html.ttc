use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'report/photo.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 8 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
if ($stash->get(['c', 0, 'cobrand', 0, 'allow_photo_display', [ $stash->get('object') ]]) && $stash->get(['object', 0, 'photo', 0])) {
$output .=  "\n";
#line 2 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
$stash->set('photo', $stash->get(['object', 0, 'get_photo_params', 0]));
$output .=  "\n<div class=\"update-img\">\n    ";
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
if ($stash->get(['photo', 0, 'url_full', 0])) {
$output .=  "<a href=\"";
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
$output .=  $stash->get(['photo', 0, 'url_full', 0]);
$output .=  "\" rel=\"fancy\">";
}

$output .=  "<img alt=\"Photo of this report\" ";
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
if ($stash->get(['photo', 0, 'height', 0])) {
$output .=  "height=\"";
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
$output .=  $stash->get(['photo', 0, 'height', 0]);
$output .=  "\" width=\"";
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
$output .=  $stash->get(['photo', 0, 'width', 0]);
$output .=  "\"";
}

$output .=  " src=\"";
#line 5 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
$output .=  $stash->get(['photo', 0, 'url', 0]);
$output .=  "\">";
#line 6 "/opt/fixmystreet/fixmystreet/templates/web/base/report/photo.html"
if ($stash->get(['photo', 0, 'url_full', 0])) {
$output .=  "<span>zoom</span></a>";
}

$output .=  "\n</div>\n";
}

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
