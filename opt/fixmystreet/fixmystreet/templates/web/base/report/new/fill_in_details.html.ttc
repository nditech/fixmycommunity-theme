use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1433826839',
        'name' => 'report/new/fill_in_details.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$stash->set('bodyclass', '');
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['report', 0, 'used_map', 0])) {
$stash->set('bodyclass', 'mappage');
}

#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['report', 0, 'used_map', 0])) {
$output .=  $context->process(("maps/" . $stash->get(['map', 0, 'type', 0]) . ".html"));
}

#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $context->include('header.html', { 'title' => $stash->get(['loc', [ 'Reporting a problem' ]]) });

$output .=  "\n\n";
#line 23 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['report', 0, 'used_map', 0])) {
$output .=  "\n\n<form action=\"";
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $stash->get(['c', 0, 'uri_for', [ '/report/new' ]]);
$output .=  "\" method=\"post\" name=\"mapForm\" id=\"mapForm\"";
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['c', 0, 'cobrand', 0, 'allow_photo_upload', 0])) {
$output .=  " enctype=\"multipart/form-data\"";
}

$output .=  " class=\"validate\">\n    ";
#line 13 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['c', 0, 'req', 0, 'params', 0, 'map_override', 0])) {
$output .=  "\n        <input type=\"hidden\" name=\"map_override\" value=\"";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['c', 0, 'req', 0, 'params', 0, 'map_override', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\">\n    ";
}

$output .=  "\n\n    <input type=\"hidden\" name=\"pc\" value=\"";
#line 15 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('pc');
    
    &$_tt_filter($output);
};

$output .=  "\">\n\n";
}
else {
$output .=  "\n\n<form action=\"";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $stash->get(['c', 0, 'uri_for', [ '/report/new' ]]);
$output .=  "\" method=\"post\" name=\"mapSkippedForm\"";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['c', 0, 'cobrand', 0, 'allow_photo_upload', 0])) {
$output .=  " enctype=\"multipart/form-data\"";
}

$output .=  " class=\"validate\">\n    <input type=\"hidden\" name=\"pc\" value=\"";
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('pc');
    
    &$_tt_filter($output);
};

$output .=  "\">\n    <input type=\"hidden\" name=\"skipped\" value=\"1\">\n\n";
}

$output .=  "\n\n    <input type=\"hidden\" name=\"latitude\" id=\"fixmystreet.latitude\" value=\"";
#line 25 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('latitude');
    
    &$_tt_filter($output);
};

$output .=  "\">\n    <input type=\"hidden\" name=\"longitude\" id=\"fixmystreet.longitude\" value=\"";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('longitude');
    
    &$_tt_filter($output);
};

$output .=  "\">\n\n    ";
#line 34 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get(['report', 0, 'used_map', 0])) {
$output .=  "\n        ";
#line 29 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $stash->get('map_html');
$output .=  "\n        </div>\n        <div id=\"side\">\n    ";
}
else {
$output .=  "\n        <div id=\"skipped-map\">\n    ";
}

$output .=  "\n\n    ";
#line 38 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
if ($stash->get('login_success')) {
$output .=  "\n        <p class='form-success'>";
#line 37 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $stash->get(['loc', [ 'You have successfully signed in; please check and confirm your details are accurate:' ]]);
$output .=  "</p>\n    ";
}

$output .=  "\n\n    ";
#line 40 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $context->process('report/new/fill_in_details_form.html');
$output .=  "\n\n    </div>\n</form>\n\n";
#line 45 "/opt/fixmystreet/fixmystreet/templates/web/base/report/new/fill_in_details.html"
$output .=  $context->include('footer.html');
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
