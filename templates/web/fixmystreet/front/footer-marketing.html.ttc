use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'front/footer-marketing.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "                        <div class=\"tablewrapper bordered\">\n                            <div id=\"footer-mobileapps\">\n                                <!--\n                                <h4></h4>\n                                <p>\n                                </p>\n                                -->\n                            </div>\n\n                            <div id=\"footer-help\">\n                                <p>\n                                Powered by <a class=\"platform-logo\" href=\"http://fixmystreet.org/\">FixMyStreet Platform</a>\n                                </p>\n                                <ul>\n                                    <li>\n                                        <h4>";
#line 16 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/footer-marketing.html"
$output .=  $stash->get(['loc', [ 'Are you a developer?' ]]);
$output .=  "</h4>\n                                        <p>";
#line 17 "/opt/fixmystreet/fixmystreet/templates/web/fixmystreet/front/footer-marketing.html"
$output .=  $stash->get(['loc', [ 'Would you like to contribute to FixMyStreet? Our code is open source and <a href="http://fixmystreet.org">available at fixmystreet.org</a>.' ]]);
$output .=  "</p>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
