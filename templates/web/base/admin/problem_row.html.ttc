use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'admin/problem_row.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 43 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('problems');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'problem'} = $_tt_value;
$output .=  "\n    <tr";
#line 2 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'state', 0]) eq 'hidden') {
$output .=  ' class="adminhidden"';
}

$output .=  ">\n        <td class=\"record-id\">";
#line 15 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'is_visible', 0])) {
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$stash->set('cobrand_data', $stash->get(['problem', 0, 'cobrand_data', 0]));
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"

# CAPTURE
$stash->set('cobrand_data', do {
    my $output = '';
if (! $stash->get(['problem', 0, 'cobrand', 0])) {
$output .=  $stash->get(['c', 0, 'data_for_generic_problem', 0]);
}

    $output;
});

#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get('cobrand_data')) {
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$stash->set('uri', $stash->get(['c', 0, 'uri_for_email', [ '/report', $stash->get(['problem', 0, 'id', 0]), $stash->get('cobrand_data') ]]));
}
else {
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$stash->set('uri', $stash->get(['c', 0, 'uri_for_email', [ '/report', $stash->get(['problem', 0, 'id', 0]) ]]));
}


$output .=  "\n        <a href=\"";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get('uri');
$output .=  "\" class=\"admin-offsite-link\">";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['problem', 0, 'id', 0]);
$output .=  "</a>";
}
else {
#line 14 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['problem', 0, 'id', 0]);
}

$output .=  "</td> \n        <td>";
#line 16 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('value_or_nbsp', { 'value' => $stash->get(['problem', 0, 'title', 0]) });
$output .=  "</td> \n        <td>\n            ";
#line 18 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('value_or_nbsp', { 'value' => $stash->get(['problem', 0, 'name', 0]) });
$output .=  "\n            <br>";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('value_or_nbsp', { 'value' => $stash->get(['problem', 0, 'user', 0, 'email', 0]) });
$output .=  "\n            <br>";
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Anonymous' ]]);
$output .=  ": ";
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'anonymous', 0])) {
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Yes' ]]);
}
else {
#line 20 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'No' ]]);
}

$output .=  "\n        </td>\n        <td>\n            ";
#line 23 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('value_or_nbsp', { 'value' => $stash->get(['problem', 0, 'category', 0]) });
$output .=  "\n            <br>";
#line 30 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get('edit_body_contacts')) {
$output .=  "              ";
#line 27 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get(['problem', 0, 'bodies', 0, 'values', 0]);
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR2:   while (! $_tt_error) {
            $stash->{'body'} = $_tt_value;
$output .=  "\n                <a href=\"";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['c', 0, 'uri_for', [ 'body', $stash->get(['body', 0, 'id', 0]) ]]);
$output .=  "\">";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('value_or_nbsp', { 'value' => $stash->get(['body', 0, 'name', 0]) });
$output .=  "</a>\n              ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

}
else {
#line 29 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('value_or_nbsp', { 'value' => $stash->get(['problem', 0, 'bodies_str', 0]) });
}

$output .=  "            <br>";
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['problem', 0, 'cobrand', 0]);
$output .=  "<br>";
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['problem', 0, 'cobrand_data', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\n        </td>\n        <td>";
#line 33 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['problem', 0, 'state', 0]);
$output .=  "<br><small>\n            ";
#line 34 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Created' ]]);
$output .=  ":&nbsp;";
#line 34 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('format_time', { 'time' => $stash->get(['problem', 0, 'created', 0]) });
$output .=  "\n            <br>";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'When sent' ]]);
$output .=  ":&nbsp;";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('format_time', { 'time' => $stash->get(['problem', 0, 'whensent', 0]) });
#line 36 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'is_visible', 0])) {
$output .=  "<br>";
#line 36 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Confirmed:' ]]);
$output .=  "&nbsp;";
#line 36 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('format_time', { 'time' => $stash->get(['problem', 0, 'confirmed', 0]) });
}

#line 37 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'is_fixed', 0])) {
$output .=  "<br>";
#line 37 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Fixed:' ]]);
$output .=  " ";
#line 37 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('format_time', { 'time' => $stash->get(['problem', 0, 'lastupdate', 0]) });
}

#line 38 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'is_closed', 0])) {
$output .=  "<br>";
#line 38 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Closed:' ]]);
$output .=  " ";
#line 38 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('format_time', { 'time' => $stash->get(['problem', 0, 'lastupdate', 0]) });
}

#line 39 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
if ($stash->get(['problem', 0, 'is_open', 0])) {
$output .=  "<br>";
#line 39 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Last&nbsp;update:' ]]);
$output .=  " ";
#line 39 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $context->process('format_time', { 'time' => $stash->get(['problem', 0, 'lastupdate', 0]) });
}

$output .=  "        </small></td>\n        <td><a href=\"";
#line 41 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['c', 0, 'uri_for', [ 'report_edit', $stash->get(['problem', 0, 'id', 0]) ]]);
$output .=  "\">";
#line 41 "/opt/fixmystreet/fixmystreet/templates/web/base/admin/problem_row.html"
$output .=  $stash->get(['loc', [ 'Edit' ]]);
$output .=  "</a></td>\n    </tr>";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
