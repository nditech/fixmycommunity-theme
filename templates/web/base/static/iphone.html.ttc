use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'static/iphone.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $context->include('header.html', { 'title' => 'FixMyStreet for iPhone screenshots' });
$output .=  "\n\n<h1>iPhone simulator simulator</h1>\n\n";
#line 7 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$stash->set('screens', [ [ 'iphone-1start.png', 'Click the image to progress through the flow of using the iPhone FixMyStreet application.
            <br>When launched, the user&rsquo;s location automatically gets fetched&hellip;' ], [ 'iphone-2locfound.png', 'They want to take a photo.' ], [ 'iphone-pickpicture1.png', 'The simulator doesn&rsquo;t have a camera, so we&rsquo;re taken to the photo albums. Let&rsquo;s pick Hawaii.' ], [ 'iphone-pickpicture2.png', 'That red clouds photo looks nice.' ], [ 'iphone-pickpicture3.png', 'After any moving or scaling we want, we select the photo.' ], [ 'iphone-3picture.png', 'Okay, now we need to edit the summary of the report.' ], [ 'iphone-editsummary.png', 'Enter some text.' ], [ 'iphone-editsummary2.png', 'And done.' ], [ 'iphone-4subject.png', 'I haven&rsquo;t entered all my details yet, so that&rsquo;s next.' ], [ 'iphone-5details.png', 'Your details are remembered so you only have to enter them once.' ], [ 'iphone-6emailkeyboard.png', 'The iPhone has different keyboards, this is the email one.' ], [ 'iphone-5details.png', 'Right, we need to enter a name.' ], [ 'iphone-editname.png', 'Slightly different keyboard to the email one.' ], [ 'iphone-detailsdone.png', 'Okay, details entered.' ], [ 'iphone-allready.png', 'That&rsquo;s everything, hit Report!' ], [ 'iphone-7uploading.png', 'Uploading&hellip;' ], [ 'iphone-8response.png', 'The simulator always thinks it&rsquo;s in the US, which FixMyStreet won&rsquo;t like very much.' ], [ 'iphone-allready.png', 'Ah well, let&rsquo;s read the About page instead' ], [ 'iphone-9about.png', 'Donate? :)' ] ]);

$output .=  "\n\n<script type=\"text/javascript\">\ndocument.write('<style type=\"text/css\">.vv { display: none; }</style>');\nfunction show(a) {\n    if (a==";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $stash->get(['screens', 0, 'size', 0]);
$output .=  ") b = 1;\n    else b = a+1;\n    document.getElementById('d' + a).style.display='none';\n    document.getElementById('d' + b).style.display='block';\n}\n</script>\n\n";
#line 49 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('screens');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'screen'} = $_tt_value;
$output .=  "\n\n    <div id='d";
#line 44 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $stash->get(['loop', 0, 'count', 0]);
$output .=  "'";
#line 44 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
if (! $stash->get(['loop', 0, 'first', 0])) {
$output .=  ' class=\'vv\'';
}

$output .=  ">\n        <p>";
#line 45 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $stash->get(['screen', 0, 1, 0]);
$output .=  "</p>\n        <p align='center'><a onclick='show(";
#line 46 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $stash->get(['loop', 0, 'count', 0]);
$output .=  ");return false' href='#d";
#line 46 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $stash->get(['loop', 0, 'count', 0]) + 1;
$output .=  "'><img src='";
#line 46 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $stash->get(['screen', 0, 0, 0]);
$output .=  "' width=414 border=0 height=770></a></p>\n    </div>\n\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n";
#line 51 "/opt/fixmystreet/fixmystreet/templates/web/base/static/iphone.html"
$output .=  $context->include('footer.html');
$output .=  "\n\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
