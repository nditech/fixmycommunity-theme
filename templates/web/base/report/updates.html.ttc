use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'report/updates.html',
        'modtime' => '1433826839',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set(['global', 0, 'last_state', 0], '');
$output .=  "\n";
#line 4 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('updates');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'update'} = $_tt_value;
$output .=  "\n";
#line 3 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$output .=  $context->include('report/update.html');
$output .=  "\n";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n\n";

$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {
        'meta_line' => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
$output .=  "\n\n    ";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get(['update', 0, 'whenanswered', 0])) {
$output .=  "\n        ";
$output .=  "\n        ";
#line 10 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'Still open, via questionnaire, %s' ]]), $stash->get(['prettify_dt', [ $stash->get(['update', 0, 'whenanswered', 0]) ]]) ]]);
$output .=  "\n        ";
#line 11 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$context->throw('return', '', \$output);
$output .=  "\n    ";
}

$output .=  "\n\n    ";
#line 25 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get(['update', 0, 'anonymous', 0]) || $stash->get(['update', 0, 'name', 0]) eq '') {
$output .=  "\n        ";
#line 15 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'Posted anonymously at %s' ]]), $stash->get(['prettify_dt', [ $stash->get(['update', 0, 'confirmed', 0]) ]]) ]]);
}
elsif ($stash->get(['update', 0, 'user', 0, 'from_body', 0])) {
#line 16 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"

# CAPTURE
$stash->set('user_name', do {
    my $output = '';

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['update', 0, 'user', 0, 'name', 0]);
    
    &$_tt_filter($output);
};

    $output;
});

#line 16 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('body', $stash->get(['update', 0, 'user', 0, 'body', 0]));
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get('body') eq 'Bromley Council') {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('body', ($stash->get('body') . " <img src='/cobrands/bromley/favicon.png' alt=''>"));
}

$output .=  "\n        ";
#line 22 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'Posted by %s (<strong>%s</strong>) at %s' ]]), $stash->get('user_name'), $stash->get('body'), $stash->get(['prettify_dt', [ $stash->get(['update', 0, 'confirmed', 0]) ]]) ]]);
}
else {
$output .=  "\n        ";
#line 24 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['tprintf', [ $stash->get(['loc', [ 'Posted by %s at %s' ]]), $stash->get(['update', 0, 'name', 0]), $stash->get(['prettify_dt', [ $stash->get(['update', 0, 'confirmed', 0]) ]]) ]]);
    
    &$_tt_filter($output);
};

}

#line 27 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', '');
#line 28 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get(['update', 0, 'mark_fixed', 0])) {
#line 28 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as fixed' ]]));
}

#line 29 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get(['update', 0, 'mark_open', 0])) {
#line 29 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'reopened' ]]));
}

#line 36 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if (! $stash->get('update_state') && $stash->get(['update', 0, 'problem_state', 0])) {
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('state', $stash->get(['update', 0, 'meta_problem_state', 0]));
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get(['c', 0, 'cobrand', 0, 'moniker', 0]) eq 'bromley' || $stash->get(['problem', 0, 'bodies_str', 0]) eq '2482') {
#line 33 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get('state') eq 'unable to fix') {
$stash->set('update_state', 'marked as no further action');
}

#line 34 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get('state') eq 'not responsible') {
$stash->set('update_state', 'marked as third party responsibility');
}

}

}

#line 61 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if (! $stash->get('update_state') && $stash->get(['update', 0, 'problem_state', 0])) {
#line 60 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get('state') eq 'confirmed' && $stash->get(['global', 0, 'last_state', 0]) ne '') {
#line 39 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'reopened' ]]));
}
elsif ($stash->get('state') eq 'investigating') {
#line 41 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as investigating' ]]));
}
elsif ($stash->get('state') eq 'planned') {
#line 43 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as planned' ]]));
}
elsif ($stash->get('state') eq 'in progress') {
#line 45 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as in progress' ]]));
}
elsif ($stash->get('state') eq 'action scheduled') {
#line 47 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as action scheduled' ]]));
}
elsif ($stash->get('state') eq 'closed') {
#line 49 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as closed' ]]));
}
elsif ($stash->get('state') eq 'fixed') {
#line 51 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as fixed' ]]));
}
elsif ($stash->get('state') eq 'unable to fix') {
#line 53 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as unable to fix' ]]));
}
elsif ($stash->get('state') eq 'not responsible') {
#line 55 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as not the council\'s responsibility' ]]));
}
elsif ($stash->get('state') eq 'duplicate') {
#line 57 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as a duplicate report' ]]));
}
elsif ($stash->get('state') eq 'internal referral') {
#line 59 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set('update_state', $stash->get(['loc', [ 'marked as an internal referral' ]]));
}

}

#line 62 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
if ($stash->get('update_state') ne $stash->get(['global', 0, 'last_state', 0])) {
$output .=  ', '  . $stash->get('update_state');
}

#line 63 "/opt/fixmystreet/fixmystreet/templates/web/base/report/updates.html"
$stash->set(['global', 0, 'last_state', 0], $stash->get('update_state'));
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    },
});
