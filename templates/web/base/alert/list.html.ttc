use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.24
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1433826839',
        'name' => 'alert/list.html',
    },
    BLOCK => sub {
    my $context = shift || die "template sub called without context\n";
    my $stash   = $context->stash;
    my $output  = '';
    my $_tt_error;
    
    eval { BLOCK: {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
if ($stash->get('pretty_pc')) {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$stash->set('title', $stash->get(['tprintf', [ $stash->get(['loc', [ 'Local RSS feeds and email alerts for ‘%s’' ]]), $stash->get('pretty_pc') ]]));
}
else {
#line 1 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$stash->set('title', $stash->get(['loc', [ 'Local RSS feeds and email alerts' ]]));
}


$output .=  "\n\n";
#line 9 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $context->include('header.html', { 'title' => $stash->get('title'), 'bodyclass' => 'twothirdswidthpage' });
$output .=  "\n\n";
#line 16 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
if ($stash->get('pretty_pc')) {
$output .=  "\n    ";
#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"

# CAPTURE
$stash->set('pretty_pc', do {
    my $output = '';

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('replace', [ ' ', '&nbsp;' ])
              || $context->throw($context->error);


# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get('pretty_pc');
    
    &$_tt_filter($output);
};

    
    &$_tt_filter($output);
};

    $output;
});

#line 12 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$stash->set('title', $stash->get(['tprintf', [ $stash->get(['loc', [ 'Local RSS feeds and email alerts for ‘%s’' ]]), $stash->get('pretty_pc') ]]));

$output .=  "\n";
}

$output .=  "\n\n\n<h1>";
#line 19 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $stash->get('title');
$output .=  "</h1>\n\n<form id=\"alerts\" name=\"alerts\" method=\"post\" action=\"/alert/subscribe\">\n\n  ";
#line 35 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
if ($stash->get(['photos', 0, 'size', 0])) {
$output .=  "\n    <div id=\"alert_photos\" class=\"sticky-sidebar\">\n      <aside>\n        <h2>";
#line 26 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $stash->get(['loc', [ 'Photos of recent nearby reports' ]]);
$output .=  "</h2>\n        ";
#line 32 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"

# FOREACH 
do {
    my ($_tt_value, $_tt_error, $_tt_oldloop);
    my $_tt_list = $stash->get('photos');
    
    unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
        $_tt_list = Template::Config->iterator($_tt_list)
            || die $Template::Config::ERROR, "\n"; 
    }

    ($_tt_value, $_tt_error) = $_tt_list->get_first();
    eval { $_tt_oldloop = $stash->get('loop') };
    $stash->set('loop', $_tt_list);
    eval {
FOR1:   while (! $_tt_error) {
            $stash->{'p'} = $_tt_value;
#line 27 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$stash->set('photo', $stash->get(['p', 0, 'get_photo_params', 0]));

$output .=  "\n            <a href=\"/report/";
#line 30 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $stash->get(['p', 0, 'id', 0]);
$output .=  "\"><img border=\"0\" height=\"100\"\n                src=\"";
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $stash->get(['photo', 0, 'url_tn', 0]);
$output .=  "\" alt=\"";
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['p', 0, 'title', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\" title=\"";
#line 31 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"

# FILTER
$output .=  do {
    my $output = '';
    my $_tt_filter = $context->filter('html')
              || $context->throw($context->error);

$output .=  $stash->get(['p', 0, 'title', 0]);
    
    &$_tt_filter($output);
};

$output .=  "\"></a>\n        ";;
            ($_tt_value, $_tt_error) = $_tt_list->get_next();
        }
    };
    $stash->set('loop', $_tt_oldloop);
    die $@ if $@;
    $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
    die $_tt_error if $_tt_error;
};

$output .=  "\n      </aside>\n    </div>\n  ";
}

$output .=  "\n\n  ";
#line 37 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $context->include('alert/_list.html');
$output .=  "\n\n</form>\n\n";
#line 41 "/opt/fixmystreet/fixmystreet/templates/web/base/alert/list.html"
$output .=  $context->include('footer.html');
$output .=  "\n";
    } };
    if ($@) {
        $_tt_error = $context->catch($@, \$output);
        die $_tt_error unless $_tt_error->type eq 'return';
    }

    return $output;
},
    DEFBLOCKS => {

    },
});
